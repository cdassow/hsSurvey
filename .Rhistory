#drivers log for 2019 shocking temp, pH, conductivity
dlog19=read.csv("driversLog2019.csv", header = T, stringsAsFactors = F)
dlog18=read.csv("driversLog_condTemp.csv", header = T, stringsAsFactors = F)
#bringin lakeID info from mfe db
#John's MFE working directory
setwd("C:/Users/jcaff/Documents/Jones Lab/fish/fish_data")
source("dbUtil.r")
dbTableList()
dbLinfo=dbTable("LAKES")
dbfishI=dbTable('FISH_INFO')
dbfishS=dbTable('FISH_SAMPLES')
fishDB=dbfishS%>%
inner_join(dbfishI, by="sampleID")
fishDB$dayOfYear=as.numeric(fishDB$dayOfYear)
fishDB$projectID=as.numeric(fishDB$projectID)
fishDB$fishNum=as.numeric(fishDB$fishNum)
fishI.is=read.csv("fishInfoIS.csv")
fishS.is=read.csv("fishSamplesIS.csv")
#combining sample and fish info together
fishIS=fishI.is%>%
inner_join(fishS.is, by="sampleID")%>%
filter(species%in% c("largemouth_bass", "smallmouth_bass"))
#reformatting date columns
fishIS$dateSet=as.Date(as.POSIXct(fishIS$dateSet))
fishIS$dateSample=as.Date(as.POSIXct(fishIS$dateSample))
fishIS$dateTimeSet=as.POSIXct(fishIS$dateTimeSet, format= "%m/%d/%Y %H:%M:%S")
fishIS$dateTimeSample=as.POSIXct(fishIS$dateTimeSample, format= "%m/%d/%Y %H:%M:%S")
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37, species=="largemouth_bass")
#makeing lakeID column and year column
for(i in 1:nrow(fish)){
fish$lakeID[i]=strsplit(as.character(fish$siteID[i]), split = '_')[[1]][1]
fish$year[i]=strsplit(as.character(fish$dateSample[i]), split = "-")[[1]][1]
}
#PE data from PEs calculated on a separate script
#setwd("~/../Box Sync/NDstuff/CNH/hsSurvey") #Colin's working directory
setwd("C:/Users/jcaff/Documents/Jones Lab/hsSurvey")
View(fish)
View(fishS.is)
#trying to calculate fishing hours
hours <- fishS.is %>%
filter(gear=="BE")%>%
group_by(sampleID) %>%
distinct(effort)%>%
filter(is.na(effort)==F)%>%
filter(effort!="NA")%>%
filter(effort!=0)
View(hours)
#number caught
nDat <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
summarise(totalNum = n())
View(nDat)
#Attempting to calculate catch per hour (replacing distanceShockedKM w/ effort)
indvCPEhr <- hours %>%
left_join(nDat, by=c("sampleID"))%>%
mutate(sampleCPEhr = totalNum/hours)
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))%>%
filter(is.na(distanceShocked)==F)%>%
filter(distanceShocked!="NA")%>%
filter(distanceShocked!=0)
View(effort)
View(hours)
#Attempting to calculate catch per hour (replacing distanceShockedKM w/ effort)
indvCPEhr <- hours %>%
left_join(nDat, by=c("sampleID"))%>%
mutate(sampleCPEhr = totalNum/effort)
View(indvCPEhr)
#Attempting to calculate catch per hour (replacing distanceShockedKM w/ effort)
indvCPEhr <- hours %>%
left_join(nDat, by=c("sampleID"))%>%
mutate(sampleCPEhr = totalNum/effort)%>%
filter(is.na(sampleCPEhr)==F)%>%
filter(sampleCPEhr!="NA")%>%
filter(sampleCPEhr!=0)
View(indvCPEhr)
#CPEhr for each lake pooled across day and year
lkCPEhr <- indvCPEhr%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPE, na.rm=T), lksdCPE=sd(sampleCPE, na.rm = T))
#CPEhr for each lake pooled across day and year
lkCPEhr <- indvCPEhr%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPEhr, na.rm=T), lksdCPE=sd(sampleCPE, na.rm = T))
#CPEhr for each lake pooled across day and year
lkCPEhr <- indvCPEhr%>%
group_by(lakeID)%>%
summarize(lkmeanCPEhr=mean(sampleCPEhr, na.rm=T), lksdCPEhr=sd(sampleCPEhr, na.rm = T))
View(lkCPEhr)
#combining all PE & lake characteristic data with CPUEhr and fishkm data
full=all%>%
left_join(lkCPEhr, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
left_join(lkCPE, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
#combining all PE & lake characteristic data with CPUEhr and fishkm data
full<-all%>%
left_join(lkCPEhr, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
write.csv(full, "pe_cpue_ModelBuild.csv", row.names = F)
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
left_join(lkCPE, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
full=all%>%
left_join(lkCPE, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
#PE data from PEs calculated on a separate script
#setwd("~/../Box Sync/NDstuff/CNH/hsSurvey") #Colin's working directory
setwd("C:/Users/jcaff/Documents/Jones Lab/hsSurvey")
=======
#go to hsSurvey folder with creel data
setwd("C:/Users/Camille/Desktop/Fishscapes/hsSurvey/")
#load data from ecreel survey about fishing pressure
library(readxl)
creelSurvey <- read_excel("creelSurvey_FishPressure.xlsx")
View(creelSurvey_FishPressure)
#loading data from creel interview data from vilas
creel_fishdata <- read_excel("creel_raw_interview_fish_data_VO.xlsx")
View(creel_raw_interview_fish_data_VO)
#loading data from walleye creel survey sheet
WALLEYE_CPE <- read_excel("WALLEYE_FALLYOY_CPE.xlsx")
View(WALLEYE_FALLYOY_CPE)
#loading data from creel interview data from vilas
library(readxl)
creel_fishdata <- read_excel("creel_raw_interview_fish_data_VO.xlsx")
View(creel_raw_interview_fish_data_VO)
#ORGANIZE DATA
UniqWBIC <- unique(WALLEYE_CPE$WBIC)
head(UniqWBIC)
#ORGANIZE DATA
#take out unique lakes using WBICs
UniqWBIC <- WALLEYE_CPE[,unique(WALLEYE_CPE$WBIC)]
#ORGANIZE DATA
#take out unique lakes using WBICs
VilasWal <- WALLEYE_CPE[WALLEYE_CPE$county=="VILAS",]
View(VilasWal)
UniqWBIC <- unique(VilasWal$WBIC)
ls(UniqWBIC)
VilasWal2 <- creelSurvey[creelSurvey$county=="VILAS",]
View(VilasWal2)
VilasWal2 <- creelSurvey[creelSurvey$county=="Villas",]
vilaswal3 <- creel_fishdata[creel_fishdata$county=="VILAS",]
View(vilaswal3)
Walfish=VilasWal%>%
inner_join(VilasWal2, by="WBIC")
View(VilasWal2)
Walfish=VilasWal%>%
inner_join(vilaswal3, by="WBIC")
View(Walfish)
VilasWal2.0 <- VilasWal2$Species=="walleye"
VilasWal2.0 <- VilasWal2[VilasWal2$Species=="walleye",]
View(VilasWal2.0)
rename(VilasWal2.0,lake=waterbody)
rename(VilasWal2.0,"lake"="waterbody")
rename(VilasWal2.0, lake = waterbody)
rename(VilasWal2.0, lake = "waterbody")
VilasWal2.0 %% rename(lake = "waterbody")
VilasWal2.0 %% rename_(lake = "waterbody")
rename_(VilasWal2.0, lake = "waterbody")
rename_(VilasWal2.0, lake = waterbody)
# get column names
colnames(VilasWal2.0)
# Rename column where names is "lake"
names(VilasWal2.0)[names(VilasWal2.0) == "lake"] <- "waterbody"
#join walfish and vilaswal2.0 to put all data together
ALLWalfish=Walfish%>%
inner_join(VilasWal2.0, by = "waterbody")
View(ALLWalfish)
#join walfish and vilaswal2.0 to put all data together
ALLWalfish=Walfish%>%
left_join(VilasWal2.0, by = "waterbody")
View(ALLWalfish)
#join walfish and vilaswal2.0 to put all data together
ALLWalfish=Walfish%>%
right_join(VilasWal2.0, by = "waterbody")
View(ALLWalfish)
#join walfish and vilaswal2.0 to put all data together
ALLWalfish=Walfish%>%
left_join(VilasWal2.0, by = "waterbody")
View(ALLWalfish)
>>>>>>> 39bacbafdc95efe6f590136d1fddf5ebdab68a05
>>>>>>> 4b8e287af5b19fb607fd49432a02d83cc3e52374
library(dplyr)
library(ggplot2)
gdriveURL <- function(x){
x =
upURL = sub("^[^=]*", "", x)
y1 =  "https://docs.google.com/uc?id"
y2 = "&export=download"
downURL = paste0(y1,upURL,y2)
read.csv(downURL, header = TRUE)
}
creelwall=gdriveURL("https://drive.google.com/open?id=1-d90GHr4iq_xdycFnkis1VKoYqaps00c")
head(creelwall)
#speciescode column, needs to be sorted by county, WBICs
#note the spelling for the species code columns, they vary in DNR data
creelwall <- creelwall[grep("X22",creelwall$Species.Code),]
creelwall <- creelwall[grep("VILAS",creelwall$County),]
View(creelwall)
creelwall=gdriveURL("https://drive.google.com/open?id=1-d90GHr4iq_xdycFnkis1VKoYqaps00c")
View(creelwall)
gdriveURL <- function(x){
x =
upURL = sub("^[^=]*", "", x)
y1 =  "https://docs.google.com/uc?id"
y2 = "&export=download"
downURL = paste0(y1,upURL,y2)
read.csv(downURL, header = TRUE)
}
creelwall=gdriveURL("https://drive.google.com/open?id=1-d90GHr4iq_xdycFnkis1VKoYqaps00c")
View(creelwall)
head(creelwall)
#speciescode column, needs to be sorted by county, WBICs
#note the spelling for the species code columns, they vary in DNR data
creelwall <- creelwall[grep("X22",creelwall$Species.Code),]
creelwall <- creelwall[grep("VILAS",creelwall$County),]
#potential for loop to combine creel walleye data
for ( i in 1:length(nrow)){
grep("^Species",colnames(i))
#searches above vector for columns which begin with "Species" to get species code data
names(i)[names(i) == "lake"] <- "waterbody"
#change spcecies code column names to Species code so I can join
AllWall<- semi_join(X22, by="SpeciesCode")
#join species by walleye code X22
}
names(i)[names(i) == "lake"] <- "waterbody"
AllWall<- semi_join(X22, by="SpeciesCode")
creelwall2=gdriveURL("https://drive.google.com/open?id=1pyCKCcAQZiNZz-tX5U2QnZUc79OQEWX2")
head(creelwall2)
#speciescode column, needs to be sorted by county, WBICs
creelwall2 <- creelwall2[grep("X22",creelwall2$speciesCode),]
creelwall2 <- creelwall2[grep("VILAS",creelwall$County),]
#changing column name in first dataset to join with second
names(creelwall)[names(creelwall) == "Species.Code"] <- "speciesCode"
wallinfo=creelwall%>%full_join(creelwall2,by="speciesCode")
creelwall3=gdriveURL("https://drive.google.com/open?id=14IJgKosNX1GF0uOdDf4wZQNqp575px0U")
head(creelwall3)
creelwall4=gdriveURL("https://drive.google.com/open?id=1lxUd742QZMXDQunyFBnENKMYZ1XNM_Pc")
creelwall3=gdriveURL("https://drive.google.com/open?id=14IJgKosNX1GF0uOdDf4wZQNqp575px0U")
creelwall4=gdriveURL("https://drive.google.com/open?id=1lxUd742QZMXDQunyFBnENKMYZ1XNM_Pc")
head(creelwall4)
creelwall5=gdriveURL("https://drive.google.com/open?id=1UYhbGH28WXjmi-4BzhfwO4KYwrBCNO2Q")
head(creelwall5)
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
semi_join(X22,by="")
View(creelwall)
View(creelwall2)
#speciescode column, needs to be sorted by county, WBICs
creelwall2 <- creelwall2[grep("X22",creelwall2$speciesCode),]
creelwall2 <- creelwall2[grep("VILAS",creelwall$County),]
View(creelwall2)
creelwall2 <- creelwall2[grep("VILAS",creelwall$county),]
creelwall2=gdriveURL("https://drive.google.com/open?id=1pyCKCcAQZiNZz-tX5U2QnZUc79OQEWX2")
#speciescode column, needs to be sorted by county, WBICs
creelwall2 <- creelwall2[grep("X22",creelwall2$speciesCode),]
creelwall2 <- creelwall2[grep("VILAS",creelwall2$county),]
View(creelwall)
View(creelwall2)
wallinfo=creelwall%>%full_join(creelwall2,by="speciesCode")
wallinfo=full_join(creelwall,creelwall2, by = "speciesCode")
View(creelwall3)
View(creelwall3)
View(creelwall4)
View(creelwall5)
#speciescode column, needs to be sorted by county, WBICs
creelwall3 <- creelwall3[grep("X22",creelwall3$Species.Code),]
creelwall3 <- creelwall3[grep("VILAS",creelwall3$County),]
#speciescode column, needs to be sorted by county, WBICs
creelwall4 <- creelwall4[grep("X22",creelwall4$fishSpeciesCode),]
creelwall4 <- creelwall4[grep("VILAS",creelwall4$county),]
View(creelwall4)
#speciescode column, needs to be sorted by county, WBICs
creelwall5 <- creelwall5[grep("X22",creelwall5$fishSpeciesCode),]
creelwall5 <- creelwall5[grep("VILAS",creelwall5$county),]
#speciescode column, needs to be sorted by county, WBICs
#note the spelling for the species code columns, they vary in DNR data
creelwall <- creelwall[grep("X22",creelwall$speciesCode),]
creelwall <- creelwall[grep("VILAS",creelwall$County),]
View(creelwall)
View(creelwall4)
View(creelwall5)
View(creelwall3)
View(creelwall2)
View(creelwall)
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
semi_join(creelwall,creelwall2,by="County")
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
semi_join(creelwall,creelwall2,by="county")
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
wallinfo=inner_join(creelwall,creelwall3,by="County")
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
wallinfo=semi_join(creelwall,creelwall3,by="County")
View(wallinfo)
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
wallinfo=full_join(creelwall,creelwall3,by="County")
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
wallinfo=full_join(creelwall,creelwall2,by=c("County","county"))
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
wallinfo=full_join(creelwall,creelwall2,by=x[i,2]%in%c("County","county"))
#combine tables using county, then sort by Vilas then gather WBICS for lake info
#using dplyr
wallinfo=semi_join(creelwall,creelwall2,by=c("County","county"))
#PACKAGES
library(dplyr)
#gDrive Upload script:
gdriveURL <- function(x){
x =
upURL = sub("^[^=]*", "", x)
y1 =  "https://docs.google.com/uc?id"
y2 = "&export=download"
downURL = paste0(y1,upURL,y2)
read.csv(downURL, header = TRUE, stringsAsFactors = FALSE)
}
#Loading BASS data from Google Drive
dnrBass<-gdriveURL("https://drive.google.com/open?id=11v8FbT2wnKx_CqUfxu_V9r_8fyCfcdD2")
#Loading Creel (Vilas and Oneida) data from Google Drive
creelFishLengVO<-gdriveURL("https://drive.google.com/open?id=1zDM2mn2A0xsaRvsf0r6Gh1Orco-kculc")
View(dnrBass)
View(creelFishLengVO)
#get walleye pe data from dnr and load data
walldnr<-gdriveURL("https://drive.google.com/open?id=1DPRROWv6Cf_fP6Z-kE9ZgUfdf_F_jSNT")
View(walldnr)
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel length data and load
creeldata<-gdriveURL("https://docs.google.com/spreadsheets/d/1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM/edit?usp=sharing")
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
creelindata<-gdriveURL("https://drive.google.com/open?id=16r254ImiW50NNjdGUXHsjYAX7qBsXkMIO48VgJA5AAk")
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
creelFishint1VO<-gdriveURL("https://drive.google.com/open?id=1T_QeJTms9QmG65iT1ul_FC1H1XbhBhd5")
lakeLMB<-gdriveURL("https://drive.google.com/open?id=1FArMiTuOsoC4E08nssZUpCekSkhkMTow")
#subsetting DNR Bass information to Vilas county
dnrBassVilas<-dnrBass[dnrBass$county=="VILAS",]
#joining lake info to dnrBassVilas
vilasBassLinfo<-semi_join(lakeLMB,dnrBassVilas,by="WBIC")
vilasBassFish=dnrBassVilas%>%
inner_join(vilasBassLinfo,by="WBIC")
#subsetting LMB and SMB data from creel data
creelLMB<-creelFishint1VO[creelFishint1VO$fishSpeciesCode=="W12",]
creelSMB<-creelFishint1VO[creelFishint1VO$fishSpeciesCode=="W11",]
#pulling out vilas county creel data
vilasCreelLMB<-creelLMB[creelLMB$county=="VILAS",]
vilasCreelSMB<-creelSMB[creelSMB$county=="VILAS",]
#selecting rows of creel data needed
vilasCreelLMBsort<-vilasCreelLMB[,c(1,2,3,6,25,26,30,36,37,38)]
View(vilasCreelLMB)
View(vilasCreelLMBsort)
vilasCreelSMBsort<-vilasCreelSMB[,c(1,2,3,6,25,26,30,36,37,38)]
View(vilasCreelLMBsort)
#sort to lake and year and unique values
wbicsYear<-vilasBassFish[,c(1,2,3,5)]
View(wbicsYear)
wbicsBassFishUniq<-unique(wbicsYear)#generate data frame with list of lakes which lake data is present and bass BE surveys have been conducted for.
#repeating the wbics sort for Creel data
#LMB
wbicsYearCreelLMB<-vilasCreelLMBsort[,c(1,2,3,4)]
wbicsCreelLMBUniq<-unique(wbicsYearCreelLMB) #generate data frame with list of lakes that have had creel data for LMB and the year the surveys were conducted
View(wbicsCreelLMBUniq)
View(wbicsCreelLMBUniq)
View(wbicsYear)
View(wbicsCreelLMBUniq)
View(vilasCreelLMBsort)
View(wbicsYear)
View(vilasCreelSMB)
View(vilasCreelSMBsort)
#SMB
wbicsYearCreelSMB<-vilasCreelSMBsort[,c(1,2,3,4)]
wbicsCreelSMBUniq<-unique(wbicsYearCreelSMB)
View(wbicsCreelSMBUniq)
#renaming the surveyYear column to surveyYearCreel and surveyYearBE
wbicsBassFishUniq<-wbicsBassFishUniq%>%
rename(lakeName=waterbody,county=county.x)
wbicsCreelLMBUniq<-wbicsCreelLMBUniq%>%
rename(surveyYearCreel=surveyYear)
wbicsCreelSMBUniq<-wbicsCreelSMBUniq%>%
rename(surveyYearCreel=surveyYear)
#joining creel surveys to list of years where both SMB and LMB surveys occured
vilasCreelWBICS=inner_join(wbicsCreelLMBUniq,wbicsCreelSMBUniq,by=c("WBIC","county","lakeName","surveyYearCreel"))
vilasWBICSLMB=inner_join(wbicsBassFishUniq,vilasCreelWBICS,by=c("WBIC","county","lakeName"))
View(vilasWBICSLMB)
#clear global evnironment
rm(list=ls())
#load any packages we'll need
library(dplyr)
library(ggplot2)
#go to hsSurvey folder with creel data
setwd("C:/Users/Camille/Desktop/Fishscapes/hsSurvey/")
gdriveURL <- function(x){
x =
upURL = sub("^[^=]*", "", x)
y1 =  "https://docs.google.com/uc?id"
y2 = "&export=download"
downURL = paste0(y1,upURL,y2)
read.csv(downURL, header = TRUE)
}
#get walleye pe data from dnr and load data
walldnr<-gdriveURL("https://drive.google.com/open?id=1DPRROWv6Cf_fP6Z-kE9ZgUfdf_F_jSNT")
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel interview data and load
creelindata<-gdriveURL("https://drive.google.com/open?id=16r254ImiW50NNjdGUXHsjYAX7qBsXkMIO48VgJA5AAk")
#get lake info data
walylinfo<-gdriveURL("https://drive.google.com/open?id=1RiiiT4nmAkWyYIr7VmPk3iPCtTKlGHli")
View(walylinfo)
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel interview data and load
creelindata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
creelindata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1xnJU-3STrAV6dA75kc_Kj97Mql2T09n3DKYfyVbRBtM")
#get creel interview data and load
creelindata<-gdriveURL("https://drive.google.com/open?id=1pyCKCcAQZiNZz-tX5U2QnZUc79OQEWX2")
#get creel length data and load
creeldata<-gdriveURL("https://drive.google.com/open?id=1-d90GHr4iq_xdycFnkis1VKoYqaps00c")
View(walldnr)
#subset data for vilas and walleye species
walldnrvilas<-walldnr[walldnr$county=="VILAS",]
View(walldnrvilas)
vilaswallPE<-walldnrvilas[walldnrvilas$species=="WALLEYE"]
vilaswallPE<-walldnrvilas[walldnrvilas$species=="WALLEYE"]
vilaswallPE<-walldnrvilas[walldnrvilas$species=="WALLEYE",]
View(vilaswallPE)
View(creeldata)
creeldataV<-creeldata[creeldata$County=="VILAS"]
creeldataV<-creeldata[creeldata$County=="VILAS",]
View(creeldataV)
creeldatawall<-creeldataV[creeldataV$Species.Code=="X22",]
View(creeldatawall)
View(creelindata)
creeldataVC<-creelindata[creelindata$county=="VILAS",]
View(creeldataVC)
creeldatawall2<-creeldataVC[creeldataVC$speciesCode=="x22",]
creeldatawall2<-creeldataVC[creeldataVC$speciesCode=="X22",]
wallinfoV<-walylinfo[walylinfo$county=="Vilas"]
wallinfoV<-walylinfo[walylinfo$county=="Vilas",]
View(wallinfoV)
wallinfo<-wallinfoV[wallinfoV$fishPresent=="Walleye",]
wallinfoV %>% group_by(wallinfoV,fishPresent)
wallinfoV %>% group_by(fishPresent)
wallinfo<-wallinfoV[wallinfoV$fishPresent="Walleye",]
wallinfo<-wallinfoV[wallinfoV$fishPresent %in% c("Walleye","and Walleye"),]
View(wallinfo)
wallinfoV<-walylinfo[walylinfo$county=="Vilas",]
wallinfo<-wallinfoV[wallinfoV$fishPresent %in% c("Walleye","and Walleye"),]
wallinfoV[grep('Walleye', wallinfoV$fishPresent),]
wallinfo=wallinfoV[grep('Walleye', wallinfoV$fishPresent),]
View(wallinfoV)
musky=wallinfoV[grep('Musky', wallinfoV$fishPresent),]
View(musky)
wallinfo=wallinfoV[grep('Walleye', wallinfoV$fishPresent),]
vilasWallinfo<-semi_join(wallinfo,vilaswallPE,by"WBIC")
vilasWallinfo<-semi_join(wallinfo,vilaswallPE,by="WBIC")
View(vilasWallinfo)
View(vilaswallPE)
vilasWallinfo<-inner_join(wallinfo,vilaswallPE,by="WBIC")
View(vilasWallinfo)
View(wallinfo)
View(vilasWallinfo)
View(creeldatawall)
creeldatawallsort<-creeldatawall[,c(1,2,3,6,15,16,17)]
View(creeldatawallsort)
View(creeldatawall2)
creeldatasort2<-creeldatawall2[,c(1,2,3,6,25,26,30,36,37,38)]
View(creeldatasort2)
#sorting by unique wbics
wbicsWallyr<-unique(vilasWallinfo)
View(vilasWallinfo)
#joining data by wbic
WallData<-inner_join(vilasWallinfo,creeldata,by="WBIC")
View(WallData)
vilasWallinfosort<-vilasWallinfo[,c(1:5,13,18,31:40)]
View(vilasWallinfosort)
#joining data by wbic
WallData<-inner_join(vilasWallinfosort,creeldata,by="WBIC")
View(WallData)
#joining data by wbic
WallData<-full_join(vilasWallinfosort,creeldata,by="WBIC")
View(WallData)
WallData<WallData[,c(1:33,35)]
WalyData<WallData[,c(1:33,35)]
WallData<-WallData[,c(1:33,35)]
WallData<-WallData[WallData$County=="VILAS",]
WallData<-WallData[WallData$Species.Code=="X22",]
View(WallData)
