#clear global evnironment
rm(list=ls())
#load any packages we'll need
library(dplyr)
library(ggplot2)
#PE data from PEs calculated on a separate script
#setwd("~/../Box Sync/NDstuff/CNH/hsSurvey") #Colin's working directory
setwd("C:/Users/Camille/Desktop/Fishscapes/hsSurvey")
pes1=read.csv("2019PEs.csv", header = T, stringsAsFactors = F) #2019 lake PEs
pes2=read.csv("fishscapes2018_peSum_20180914.csv", header = T, stringsAsFactors = F) #2018 lakePEs
#bring in lake info
linfo=read.csv("biocom_Lakes.csv", header = T, stringsAsFactors = F) #lake characteristic information
#bringin lakeID info from mfe db
setwd("C:/Users/Camille/Desktop/Fishscapes")
source("dbUtil.r")
dbTableList()
dbLinfo=dbTable("LAKES")
dbfishI=dbTable('FISH_INFO')
dbfishS=dbTable('FISH_SAMPLES')
fishDB=dbfishS%>%
inner_join(dbfishI, by="sampleID")
fishDB$dayOfYear=as.numeric(fishDB$dayOfYear)
fishDB$projectID=as.numeric(fishDB$projectID)
fishDB$fishNum=as.numeric(fishDB$fishNum)
#bring in inseason database
setwd("C:/Users/Camille/Desktop/Fishscapes")
fishI.is=read.csv("fishInfoIS.csv")
fishS.is=read.csv("fishSamplesIS.csv")
#combining sample and fish info together
fishIS=fishI.is%>%
inner_join(fishS.is, by="sampleID")%>%
filter(species%in% c("largemouth_bass", "smallmouth_bass"))
#reformatting date columns
fishIS$dateSet=as.Date(as.POSIXct(fishIS$dateSet))
fishIS$dateSample=as.Date(as.POSIXct(fishIS$dateSample))
fishIS$dateTimeSet=as.POSIXct(fishIS$dateTimeSet, format= "%m/%d/%Y %H:%M:%S")
fishIS$dateTimeSample=as.POSIXct(fishIS$dateTimeSample, format= "%m/%d/%Y %H:%M:%S")
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37, species=="largemouth_bass")
#makeing lakeID column and year column
for(i in 1:nrow(fish)){
fish$lakeID[i]=strsplit(as.character(fish$siteID[i]), split = '_')[[1]][1]
fish$year[i]=strsplit(as.character(fish$dateSample[i]), split = "-")[[1]][1]
}
#see what info each table has
colnames(pes1)
colnames(pes2)
#trim 2018 pe info to just the columns that the 2019 pe info has (lakeID, nEvents/nSamples, nHat, nHatLow, nHatHigh)
pes1=pes1[pes1$nEvents!=0, c(1,3,4,5,6)]
pes2=pes2[,c(2,3,4,5,6)]
#we're pretty close, we have all the right columsn but not with uniform names or in the same order between dataframes
colnames(pes1)
colnames(pes2)
#we'll rename the columns in pes2 to match pes1 then use the functionality of dplyr to combine them and have the function bind_rows match the correct columns between the two dataframes
colnames(pes2)=c("lakeID", "nEvents", "nHatLow", "nHat", "nHatHigh")
colnames(pes2)
#cominbing all our pes into one data frame
pes=bind_rows(pes1,pes2)
###  now need to pull in info on lake size and fish info to help with out regression
#lets look at what info is in linfo
str(linfo)
#use db table to match our mfe lakeIDs to statewide WBICs
wbics=dbLinfo[dbLinfo$lakeID%in%pes$lakeID,]
wbics$WBIC= as.numeric(wbics$WBIC)
dbLinfo$WBIC=as.numeric(dbLinfo$WBIC)
linfo=linfo[linfo$WBIC%in%wbics$WBIC,]
#this gets us most of the way there
lperms=left_join(x=wbics, y=linfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
#Bay lake row 2 of lperms is the row we need to change.
lperms$perimeter[2]=7.69 #km
lperms$conductance[2]=22.34 #mean cond for surfacee water in bay pulled form mfe db
#found lake row 5
lperms$surfaceArea[5]=132 #ha
lperms$maxDepth[5]=6.4 #m
#hunter lake row6
lperms$perimeter[6]= 5.13 #km
lperms$conductance[6]= 23.5 #SPC
#lake of the hills row9
lperms$perimeter[9]=2.35#km
lperms$conductance[9]=90.7 #spc
#street lake row 11
lperms$perimeter[11]=3.05 #km
#silver lake row 12
lperms$perimeter[12]=2.2 #km
lperms$conductance[12]=233.8 #spc
#upper gresham row 14
lperms$perimeter[14]=9.32 #km
lperms$conductance[14]=114.3 #spc
#white birch lake row 15
lperms$perimeter[15]=3.7 #km
#wildcat lake  row 16
#permeter needs to be traced on GIS to include big kitten
lperms$conductance[16]=169.6
#wabasso lake row 17
lperms$perimeter[17]=2.12 #km
lperms$conductance[17]= 7.4 #spc
all=full_join(pes, lperms)
fish$distanceShocked[fish$sampleID=='LV_wholeShoreline_20190708_2225_BE_FishscapesSurvey0.5mile.20180606']=0.5 #need to manually fix one distance shocked that didn't get corrected in fish EntryTool
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))%>%
filter(is.na(distanceShocked)==F)%>%
filter(distanceShocked!="NA")%>%
filter(distanceShocked!=0)
#number caught
nDat <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
summarise(totalNum = n())
#CPUE for each sample at each lake
indvCPE <- nDat %>%
left_join(effort, by=c("sampleID", "lakeID", "year"))%>%
mutate(sampleCPE = totalNum/distanceShockedKM)
#CPE for each lake pooled across day and year
lkCPE <- indvCPE%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPE, na.rm=T), lksdCPE=sd(sampleCPE, na.rm = T))
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
left_join(lkCPE, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
ggplot(full,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)
#glm fits
fit0=glm(full$lkmeanCPE~full$fishPerKM)
summary(fit0)
fitCond=glm(full$lkmeanCPE~full$fishPerKM+full$conductance)
summary(fitCond)
fitCond2=glm(full$lkmeanCPE~full$fishPerKM + (full$fishPerKM*full$conductance))
summary(fitCond2)
full=read.csv("pe_cpue_ModelBuild.csv", header = T, stringsAsFactors = F)
full=read.csv("pe_cpue_ModelBuild.csv", header = T, stringsAsFactors = F)
#### MODEL DATA ####
setwd('C:\Users\Camille\Desktop\Fishscapes\hsSurvey')
#### MODEL DATA ####
setwd('~/Desktop/Fishscapes/hsSurvey')
setwd("C:/Users/Camille/Desktop/Fishscapes/hsSurvey")
full=read.csv("pe_cpue_ModelBuild.csv", header = T, stringsAsFactors = F)
#glm fits
fit0=glm(full$lkmeanCPE~full$fishPerKM)
summary(fit0)
fit0
summary(fit0)
fitCond=glm(full$lkmeanCPE~full$fishPerKM+full$conductance)
summary(fitCond)
ggplot(full,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)
View(full)
fitConSurMax=glm(full$lkmeanCPE~full$fishPerKM+full$conductance+full$surfaceArea+full$maxSize)
summary(fitConSurMax)
fitConSurMax=lm(full$lkmeanCPE~full$fishPerKM+full$conductance+full$surfaceArea+full$maxSize)
summary(fitConSurMax)
summary(lm(full$lkmeanCPE~full$conductance+full$surfaceArea+full$maxDepth))
summary(lm(full$lkmeanCPE~full$maxSize+full$perimeter))
