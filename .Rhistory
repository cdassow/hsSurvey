left_join(dbLinfo, by="WBIC")#%>%
View(lperms)
colnames(lperms)
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeID.x","lakeName.x", "surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")
View(lperms)
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeID.x","lakeName.x", "WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID", "lakeName", "WBIC", "surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeID.x","lakeName.x", "WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID.x"="lakeID","lakeName.x"="lakeName")
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeID.x","lakeName.x", "WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x","lakeName"="lakeName.x")
View(lperms)
#this gets us most of the way there
lperms=linfo%>%
full_join(dbLinfo, by="WBIC")%>%
select("lakeID.x","lakeName.x", "WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x","lakeName"="lakeName.x")
View(lperms)
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="lakeName")%>%
select("WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x")
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="lakeName")%>%
select("WBIC.y","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x")
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="lakeName")%>%
select("lakeID.x","WBIC.y","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x")
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="lakeName")%>%
select("lakeName","lakeID.x","WBIC.y","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x")
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
which(lperms$lakeID=="BA")
dbLinfo[dbLinfo$lakeID=="BA",]
dbTableList()
met=dbTable("METADATA")
View(met)
units=dbTable('UNITS')
View(units)
lp=dbTable('LIMNO_PROFILES')
View(lp)
BA=lp[lp$lakeID=="BA",]
mean(BA$SpC, na.rm = T)
View(BA)
mean(BA$SpC[BA$depthTop==0], na.rm = T)
#row 4 of lperms is the row we need to change.
lperms$lakeName[4]="Bay Lake"
lperms$WBIC[4]=NA
lperms$surfaceArea[4]=67.33 #ha
lperms$maxDepth[4]=12.19 #m
lperms$perimeter[4]=7.69 #km
lperms$conductance[4]=22.34 #mean cond for surfacee water in bay pulled form mfe db
lperms$conductanceBiocom[4]=NA
lperms$conductivityQuintile[4]=NA
lperms=lperms[lperms$WBIC%in%wbics$WBIC,]
View(wbics)
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
#we have one issue to deal with. BA in the biocomplexity data is 'bass lake' and in the mfe database it's 'bay lake' so dplyr grabs the bass lake info instead of bay lake since bay doesn't have a WBIC and bass does. Will need to manually add in bay's data in place of bass lake
#row 4 of lperms is the row we need to change.
lperms$lakeName[4]="Bay Lake"
lperms$WBIC[4]=NA
lperms$surfaceArea[4]=67.33 #ha
lperms$maxDepth[4]=12.19 #m
lperms$perimeter[4]=7.69 #km
lperms$conductance[4]=22.34 #mean cond for surfacee water in bay pulled form mfe db
lperms$conductanceBiocom[4]=NA
lperms$conductivityQuintile[4]=NA
lperms[,1:2]
test=cbind(lperms[,1:2], wbics)
test=full_join(lperms[,1:2],wbics)
View(test)
#this gets us most of the way there
lperms=linfo%>%
left_join(dbLinfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
#row 4 of lperms is the row we need to change.
lperms$lakeName[4]="Bay"
lperms$WBIC[4]=NA
lperms$surfaceArea[4]=67.33 #ha
lperms$maxDepth[4]=12.19 #m
lperms$perimeter[4]=7.69 #km
lperms$conductance[4]=22.34 #mean cond for surfacee water in bay pulled form mfe db
lperms$conductanceBiocom[4]=NA
lperms$conductivityQuintile[4]=NA
all=full_join(pes, lperms)
View(all)
View(dbLinfo)
View(linfo)
linfo=linfo[linfo$WBIC%in%wbics$WBIC,]
View(linfo)
#use db table to match our mfe lakeIDs to statewide WBICs
wbics=dbLinfo[dbLinfo$lakeID%in%pes$lakeID,]
?left_join
#this gets us most of the way there
lperms=dbLinfo%>%
left_join(linfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
View(lperms)
#this gets us most of the way there
lperms=dbLinfo%>%
left_join(y=linfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
#this gets us most of the way there
lperms=left_join(x=dbLinfo, y=linfo, by="WBIC")#%>%
#this gets us most of the way there
lperms=left_join(x=wbics, y=linfo, by="WBIC")%>%
select("lakeName.x","lakeID.x","WBIC","surfaceArea", "maxDepth", "perimeter", "conductance", "conductanceBiocom", "conductivityQuintile")%>%
rename("lakeID"="lakeID.x", "lakeName"="lakeName.x")
which(lperms$lakeID=="BA")
#Bay lake row 2 of lperms is the row we need to change.
lperms$perimeter[2]=7.69 #km
lperms$conductance[2]=22.34 #mean cond for surfacee water in bay pulled form mfe db
View(dbLinfo)
View(pes)
mean(c(233, 234.6))
mean(c(116.6,112))
mean(c(166.5, 168.9, 173, 170.1))
#Bay lake row 2 of lperms is the row we need to change.
lperms$perimeter[2]=7.69 #km
lperms$conductance[2]=22.34 #mean cond for surfacee water in bay pulled form mfe db
#found lake row 5
lperms$surfaceArea[5]=132 #ha
lperms$maxDepth[5]=6.4 #m
#hunter lake row6
lperms$perimeter[6]= 5.13 #km
lperms$conductance[6]= 23.5 #SPC
#lake of the hills row9
lperms$perimeter[9]=2.35#km
lperms$conductance[9]=90.7 #spc
#street lake row 11
lperms$perimeter[11]=3.05 #km
#silver lake row 12
lperms$perimeter[12]=2.2 #km
lperms$conductance[12]=233.8 #spc
#upper gresham row 14
lperms$perimeter[14]=9.32 #km
lperms$conductance[14]=114.3 #spc
#white birch lake row 15
lperms$perimeter[15]=3.7 #km
#wildcat lake  row 16
#permeter needs to be traced on GIS to include big kitten
lperms$conductance[16]=169.6
#wabasso lake row 17
lperms$perimeter[17]=2.12 #km
lperms$conductance[17]= 7.4 #spc
View(lperms)
all=full_join(pes, lperms)
View(all)
dbfishI=dbTable('FISH_INFO')
dbfishS=dbTable('FISH_SAMPLES')
fishDB=dbfishS%>%
inner_join(dbfishI, by="sampleID")
fishI.is=read.csv("fishInfoIS.csv")
fishS.is=read.csv("fishSamplesIS.csv")
#combining sample and fish info together
fishIS=fishI.is%>%
inner_join(fishS.is, by="sampleID")%>%
filter(species%in% c("largemouth_bass", "smallmouth_bass"))
#reformatting date columns
fishIS$dateSet=as.POSIXct(fishIS$dateSet)
fishIS$dateSample=as.POSIXct(fishIS$dateSample)
fishIS$dateTimeSet=as.POSIXct(fishIS$dateTimeSet, format= "%m/%d/%Y %H:%M:%S")
fishIS$dateTimeSample=as.POSIXct(fishIS$dateTimeSample, format= "%m/%d/%Y %H:%M:%S")
?bind_rows
unique(fishIS$projectID)
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
class(fishIS$dayOfYear)
class(fishDB$dayOfYear)
unique(fishDB$dayOfYear)
fishDB$dayOfYear=as.numeric(fishDB$dayOfYear)
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
class(fishDB$dateSet)
fishI.is=read.csv("fishInfoIS.csv")
fishS.is=read.csv("fishSamplesIS.csv")
#combining sample and fish info together
fishIS=fishI.is%>%
inner_join(fishS.is, by="sampleID")%>%
filter(species%in% c("largemouth_bass", "smallmouth_bass"))
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
fishIS$dateSet=as.POSIXct(fishIS$dateSet)
fishIS$dateSample=as.POSIXct(fishIS$dateSample)
fishIS$dateTimeSet=as.POSIXct(fishIS$dateTimeSet, format= "%m/%d/%Y %H:%M:%S")
fishIS$dateTimeSample=as.POSIXct(fishIS$dateTimeSample, format= "%m/%d/%Y %H:%M:%S")
#reformatting date columns
fishIS$dateSet=as.Date(as.POSIXct(fishIS$dateSet))
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
fishIS$dateSample=as.Date(as.POSIXct(fishIS$dateSample))
fishIS$dateTimeSet=as.Date(as.POSIXct(fishIS$dateTimeSet, format= "%m/%d/%Y %H:%M:%S"))
fishIS$dateTimeSample=as.Date(as.POSIXct(fishIS$dateTimeSample, format= "%m/%d/%Y %H:%M:%S"))
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
class(fishDB$dateTimeSet)
fishIS$dateTimeSet=as.POSIXct(fishIS$dateTimeSet, format= "%m/%d/%Y %H:%M:%S")
fishIS$dateTimeSample=as.POSIXct(fishIS$dateTimeSample, format= "%m/%d/%Y %H:%M:%S")
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
class(fishIS$projectID)
unique(fishDB$projectID)
fishDB$projectID=as.numeric(fishDB$projectID)
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
class(fishDB$fishNum)
class(fishIS$fishNum)
unique(fishDB$fishNum)
fishDB$fishNum=as.numeric(fishDB$fishNum)
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37)
warnings()
unique(fish$projectID)
#makeing lakeID column and year column
for(i in 1:nrow(fish)){
fish$lakeID[i]=strsplit(as.character(fish$siteID[i]), split = '_')[[1]][1]
fish$year[i]=strsplit(as.character(fish$dateSample[i]), split = "-")[[1]][1]
}
unique(fish$species)
?filter()
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37, species="largemouth_bass")
#combining db and inseason db data together
fish=fishIS%>%
bind_rows(fishDB)%>%
filter(projectID==37, species=="largemouth_bass")
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(effort)
#makeing lakeID column and year column
for(i in 1:nrow(fish)){
fish$lakeID[i]=strsplit(as.character(fish$siteID[i]), split = '_')[[1]][1]
fish$year[i]=strsplit(as.character(fish$dateSample[i]), split = "-")[[1]][1]
}
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(effort)
#number caught
nDat <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
summarise(totalNum = n())
#CPUE for each sample at each lake
indvCPE <- nDat %>%
left_join(effort, by=c("sampleID", "lakeID", "year"))%>%
mutate(sampleCPE = totalNum/effort)
#CPE for each lake pooled across day and year
lkCPE <- indvCPE%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPE), lksdCPE=sd(sampleCPE))
View(lkCPE)
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)
View(effort)
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(distanceShocked*1.609))
class(fish$distanceShocked)
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))%>%
filter(is.na(distanceShocked)==F)
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))#%>%
which(effort$distanceShocked==NA)
unique(effort$distanceShocked)
which(is.na(effort$distanceShocked)==T)
which(effort$distanceShocked=="NA")
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))%>%
filter(is.na(distanceShocked)==F)%>%
filter(distanceShocked!="NA")
unique(effort$distanceShockedKM)
which(is.na(effort$distanceShockedKM)==T)
effort[66,]
fish$distanceShocked[fish$sampleID==LV_wholeShoreline_20190708_2225_BE_FishscapesSurvey0.5mile.20180606]=0.5
fish$distanceShocked[fish$sampleID=='LV_wholeShoreline_20190708_2225_BE_FishscapesSurvey0.5mile.20180606']=0.5
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))%>%
filter(is.na(distanceShocked)==F)%>%
filter(distanceShocked!="NA")
which(is.na(effort$distanceShockedKM)==T)
#number caught
nDat <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
summarise(totalNum = n())
#CPUE for each sample at each lake
indvCPE <- nDat %>%
left_join(effort, by=c("sampleID", "lakeID", "year"))%>%
mutate(sampleCPE = totalNum/effort)
str(effort)
glimpse(nDat)
glimpse(effort)
#CPUE for each sample at each lake
indvCPE <- nDat %>%
left_join(effort, by=c("sampleID", "lakeID", "year"))%>%
mutate(sampleCPE = totalNum/effort)
View(nDat)
#CPUE for each sample at each lake
indvCPE <- nDat %>%
left_join(effort, by=c("sampleID", "lakeID", "year"))%>%
mutate(sampleCPE = totalNum/distanceShockedKM)
#CPE for each lake pooled across day and year
lkCPE <- indvCPE%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPE), lksdCPE=sd(sampleCPE))
fishKM=all$nHat/all$perimeter
shockCPUE=lkCPE[lkCPE$lakeID%in%all$lakeID,]
which(all$lakeID!%in%lkCPE$lakeID)
which(all$lakeID%in%lkCPE$lakeID)
View(all)
fishKM=cbind(all$lakeID,all$nHat/all$perimeter)
View(fishKM)
ggplot(aes(x=fishKM[,2], y=shockCPUE$lkmeanCPE))+
geom_point()+geom_text(aes(label=fishKm[1,]))
library(ggplot2)
ggplot(aes(x=fishKM[,2], y=shockCPUE$lkmeanCPE))+
geom_point()+geom_text(aes(label=fishKm[1,]))
mDat=full_join(fishKM, shockCPUE)
fishKM=as.data.frame(cbind(all$lakeID,all$nHat/all$perimeter)
)
mDat=full_join(fishKM, shockCPUE)
colnames(fishKM)
fishKM=as.data.frame(cbind(all$lakeID,all$nHat/all$perimeter));colnames(fishKM)=c("lakeID", "fishPerKM")
shockCPUE=lkCPE[lkCPE$lakeID%in%all$lakeID,]
mDat=full_join(fishKM, shockCPUE)
View(mDat)
#fishing effort
effort <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
distinct(distanceShocked)%>%
mutate(distanceShockedKM=(as.numeric(distanceShocked)*1.609))%>%
filter(is.na(distanceShocked)==F)%>%
filter(distanceShocked!="NA")%>%
filter(distanceShocked!=0)
#number caught
nDat <- fish %>%
filter(gear=="BE")%>%
group_by(sampleID, lakeID, year) %>%
summarise(totalNum = n())
#CPUE for each sample at each lake
indvCPE <- nDat %>%
left_join(effort, by=c("sampleID", "lakeID", "year"))%>%
mutate(sampleCPE = totalNum/distanceShockedKM)
#CPE for each lake pooled across day and year
lkCPE <- indvCPE%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPE), lksdCPE=sd(sampleCPE))
fishKM=as.data.frame(cbind(all$lakeID,all$nHat/all$perimeter));colnames(fishKM)=c("lakeID", "fishPerKM")
shockCPUE=lkCPE[lkCPE$lakeID%in%all$lakeID,]
mDat=full_join(fishKM, shockCPUE)
View(indvCPE)
#CPE for each lake pooled across day and year
lkCPE <- indvCPE%>%
group_by(lakeID)%>%
summarize(lkmeanCPE=mean(sampleCPE, na.rm=T), lksdCPE=sd(sampleCPE, na.rm = T))
fishKM=as.data.frame(cbind(all$lakeID,all$nHat/all$perimeter));colnames(fishKM)=c("lakeID", "fishPerKM")
shockCPUE=lkCPE[lkCPE$lakeID%in%all$lakeID,]
mDat=full_join(fishKM, shockCPUE)
ggplot(aes(x=fishKM[,2], y=shockCPUE$lkmeanCPE))+
geom_point()+geom_text(aes(label=fishKm[1,]))
colnames(mDat)
ggplot(mDat,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID))
glimpse(mDat)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID))
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=1, vjust=1)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=+1, vjust=1)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-1, vjust=1)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=1, vjust=-1)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-1, vjust=-1)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)
ggplot(mDat,aes(x=as.numeric(fishPerKM), y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)+
stat_smooth(formula = y~x)
mDat$fishPerKM=as.numeric(mDat$fishPerKM)
ggplot(mDat,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)+
#glm fits
fit0=glm(mDat)
ggplot(mDat,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)+
#glm fits
fit0=glm(mDat)
ggplot(mDat,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)
#glm fits
fit0=glm(mDat$lkmeanCPE~mDat$fishPerKM)
summary(fit0)
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
full_join(lkCPE, by=lakeID)
colnames(lkCPE)
colnames(all)
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
full_join(lkCPE, by='lakeID')
View(full)
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
left_join(lkCPE, by='lakeID')
colnames(full)
#combining all PE & lake characteristic data with CPUE and fishkm data
full=all%>%
left_join(lkCPE, by='lakeID')%>%
mutate(fishPerKM=nHat/perimeter)
ggplot(full,aes(x=fishPerKM, y=lkmeanCPE))+
geom_point()+geom_text(aes(label=lakeID), hjust=-0.5, vjust=-1)
#glm fits
fit0=glm(full$lkmeanCPE~full$fishPerKM)
summary(fit0)
fitCond=glm(full$lkmeanCPE~full$fishPerKM+full$conductance)
summary(fitCond)
fitCSA=glm(full$lkmeanCPE~full$fishPerKM + (full$fishPerKM*full$conductance))
summary(fitCSA)
summary(fitCond2)
fitCond2=glm(full$lkmeanCPE~full$fishPerKM + (full$fishPerKM*full$conductance))
summary(fitCond2)
plot(y=full$lkmeanCPE, x=(full$fishPerKM+ (full$fishPerKM*full$conductance)))
abline(fitCond2)
getwd()
class(linfo$WBIC)
class(wbics$WBIC)
View(lperms)
fitCond2=glm(full$lkmeanCPE~full$fishPerKM + (full$fishPerKM*full$conductance))
summary(fitCond2)
